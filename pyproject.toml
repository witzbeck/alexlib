[project]
authors = [
    { name = "Alex Beckwith", email = "57322567+witzbeck@users.noreply.github.com" },
]
dependencies = [
    "cryptography>=43.0.3",
    "duckdb>=1.1.3",
    "faker>=33.0.0",
    "requests>=2.32.3",
    "sqlalchemy>=2.0.36",
    "sqlalchemy-utils>=0.41.2",
    "openai>=1.55.0",
    "reportlab>=4.2.5",
    "numpy>1.24.4",
    "matplotlib>=3.9.2",
    "pandas>=2.2.3",
    "scikit-learn>=1.5.2",
    "scipy>=1.14.1",
    "statsmodels>=0.14.4",
]
description = "Packages created as part of the author's Master of Science in Statistics Capstone: An Exploration of Analysis Methods on Predictive Models of Student Success"
license = { text = "MIT" }
name = "alexlib"
readme = "README.md"
requires-python = ">=3.10"
version = "1.2.1"

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-xdist>=3.6.1",
    "ruff>=0.8.0",
    "pre-commit>=4.0.1",
    "pytest-cov>=6.0.0",
]

[build-system]
build-backend = "setuptools.build_meta"
requires      = ["setuptools", "wheel"]

[tool.pytest.ini_options]
addopts = [
    "--cov=./src/alexlib",
    "--cov-report=term-missing",
    "--cov-fail-under=75",
    "--cov-branch",
    "--durations=10",
]
markers = [
    "slow: mark test as slow to run",
    "skip: mark test as skipped",
    "fast: mark test as fast to run",
]
testpaths = ["tests"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "raise OSError",
    "raise RuntimeError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

ignore_errors = true

[tool.ruff]
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "build",
    "dist",
    "site-packages",
]
extend-include = ["*.ipynb"]
indent-width = 4
line-length = 88
target-version = "py312"

[tool.ruff.lint]

extend-select = ["I"]   # Allow linter to sort imports.
fixable       = ["ALL"] # Allow fix for all enabled rules (when `--fix`) is provided.

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"                  # Allow unused variables when underscore-prefixed.
select             = ["E4", "E7", "E9", "F", "B", "Q", "W", "C", "I", "C901"]

[tool.ruff.lint.isort]
known-local-folder = ["alexlib"]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = [
    "E402",
] # Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.

[tool.ruff.format]
indent-style              = "space"
line-ending               = "auto"
quote-style               = "double"
skip-magic-trailing-comma = false
