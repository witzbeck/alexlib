[tool.poetry]
authors = ["Alex Beckwith <57322567+witzbeck@users.noreply.github.com>"]
description = "A toolset for building machine learning solutions."
license = "MIT"
name = "alexlib"
package-mode = true
packages = [
    { include = "alexlib", from = "src" },
    { include = "recipes", from = "src" },
]
readme = "README.md"
version = "1.1.0"

[tool.poetry.dependencies]
cryptography     = "^43.0"
duckdb           = "^1.1.0"
faker            = "^30.3.0"
matplotlib       = "^3.8"
pandas           = "^2.2"
python           = "^3.10"
requests         = "^2.32"
scikit-learn     = "^1.5.2"
sqlalchemy       = "^2.0"
sqlalchemy-utils = "^0.41"
statsmodels      = "^0.14.4"

[tool.poetry.group.docs.dependencies]
reportlab = "^4.2"

[tool.poetry.group.ml.dependencies]
openai = "^1.52"
scipy  = "^1.13"

[tool.poetry.group.test.dependencies]
pytest       = "^8.1"
pytest-cov   = "^5.0"
pytest-xdist = "^3.6.1"
ruff         = "^0.7.0"

[tool.poetry.group.dev.dependencies]
ipykernel  = "^6.29"
pre-commit = "^4.0"
sqlfluff   = "^3.2"


[tool.pytest.ini_options]
addopts = [
    "--cov=./src/alexlib",
    "--cov-report=term-missing",
    "--cov-fail-under=75",
    "--cov-branch",
    "--durations=10",
    "-n",
    "auto",
]
markers = [
    "slow: mark test as slow to run",
    "skip: mark test as skipped",
    "fast: mark test as fast to run",
]
testpaths = ["tests"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires      = ["poetry-core"]


[tool.ruff]
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "build",
    "dist",
    "site-packages",
]
extend-include = ["*.ipynb"]
indent-width = 4
line-length = 88
target-version = "py312"

[tool.ruff.lint]

extend-select = ["I"]   # Allow linter to sort imports.
fixable       = ["ALL"] # Allow fix for all enabled rules (when `--fix`) is provided.

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"                  # Allow unused variables when underscore-prefixed.
select             = ["E4", "E7", "E9", "F", "B", "Q", "W", "C", "I", "C901"]

[tool.ruff.lint.isort]
known-first-party = ["alexlib"]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = [
    "E402",
] # Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.

[tool.ruff.format]
indent-style              = "space"
line-ending               = "auto"
quote-style               = "double"
skip-magic-trailing-comma = false

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "raise OSError",
    "raise RuntimeError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

ignore_errors = true
