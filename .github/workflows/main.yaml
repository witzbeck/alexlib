name: Python project workflow

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [main, next/*]
    paths-ignore:
      - "**/*.md"

jobs:
  build:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        python-version: ["3.13", "3.12", "3.11", "3.10", "3.9", "3.8"]

    steps:
      - uses: actions/checkout@v4
        name: Checkout repository
        with:
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Load cached virtualenv
        id: load-cached-virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv lock --check

      - name: Install dependencies
        if: steps.load-cached-virtualenv.outputs.cache-hit != 'true'
        run: uv sync

      - name: Run tests
        run: |
          uv run pytest --cov=alexlib --cov-fail-under=75 -n auto
