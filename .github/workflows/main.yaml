name: Python project workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [ main ]
    paths-ignore:
      - "**/*.md"

jobs:
  build:
    runs-on: [self-hosted]
    strategy:
      matrix:
        python-version: ['3.13', '3.12', '3.11', '3.10', '3.9', '3.8']

    steps:
    - uses: actions/checkout@v4
      name: Checkout Repository
      with:
        fetch-depth: 1
    
    - name: Setup Python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Load cached virtualenv
      id: load-cached-virtualenv
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install dependencies
      run: poetry check
    
    - name: Install dependencies
      if: steps.load-cached-virtualenv.outputs.cache-hit != 'true'
      run: poetry install --with test --no-interaction --no-root
    
    - name: Install project
      run: poetry install --with test --no-interaction
    
    - name: Run tests
      run: |
        poetry run pytest --cov=alexlib --cov-fail-under=75 -n auto
